From 2d22a935d5526658f990966e0c7b6e97a3da615e Mon Sep 17 00:00:00 2001
From: "tonymoses@texasbluesalley.com" <tonymoses@texasbluesalley.com>
Date: Sat, 27 Apr 2019 00:55:11 -0400
Subject: [PATCH] Enhanced service settings forms

---
 config/services.php                      |  55 +++++++++++--
 language/english/manymailerplus_lang.php |   3 +-
 libraries/Services_module.php            | 133 +++++++++++++++++++++----------
 libraries/composer.php                   |  17 ++--
 4 files changed, 149 insertions(+), 59 deletions(-)

diff --git a/config/services.php b/config/services.php
index a242849..7e14966 100755
--- a/config/services.php
+++ b/config/services.php
@@ -1,13 +1,49 @@
 <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
-    return $config = array( 
+	/*default element in array is textbox. For other option
+	 append with __ (2 underscores) + EE field name 
+
+	 to add multiple options:
+		 add array as element (key = el name, value = assoc array)
+		 
+		 For example:
+		'services' => array(
+			'mandrill' => array(
+				'mandrill_api_key',
+				'mandrill_subaccount',
+				array(
+					'mandrill_options__select' => array(
+						'test1' => 'test1',
+						'test2' => 'test2',
+						'test3' => 'test3',
+					)
+				),
+				'mandrill_testmode__yes_no', 
+				'mandrill_test_api_key',				
+			)
+		)
+	If element is a select, dropdown, radio, 
+	Field NamesField name	Description
+		text	Regular text input.
+		short-text	Small text input, typically used when a fieldset needs multiple small, normally numeric, values set.
+		textarea	Textarea input.
+		select	Select dropdown input.
+		dropdown	A rich select dropdown .
+		checkbox	Checkboxes displayed in a vertical list.
+		radio	Radio buttons displayed in a vertical list.
+		yes_no	A Toggle control that returns either y or n respectively.
+		file	File input. Requires filepicker configuration.
+		image	Image input. Like file but shows an image thumbnail of the selected image as well as controls to edit or remove. Requires filepicker configuration.
+		password	Password input.
+		hidden	Hidden input.
+		html	Freeform HTML can be passed in via the content key in the field definition to have a custom input field.
+	*/
+	return $config = array( 
         'services' => array(
 			'mandrill' => array(
 				'mandrill_api_key',
-				// 'mandrill_options' => array(
-				// 	'mandrill_use_test_key' =>  'checkbox'
-				// ), 
-				'mandrill_test_api_key',
-				'mandrill_subaccount'
+				'mandrill_subaccount',
+				'mandrill_testmode__yes_no', 
+				'mandrill_test_api_key',				
 			),
 			'mailgun' => array(
 				'mailgun_api_key',
@@ -24,6 +60,13 @@
 			),
 			'sparkpost' => array(
 				'sparkpost_api_key',
+				array(
+					'sparkpost_options__select' => array(
+						'test1' => 'test1',
+						'test2' => 'test2',
+						'test3' => 'test3',
+					)
+				),
 			)
 		)
     );
diff --git a/language/english/manymailerplus_lang.php b/language/english/manymailerplus_lang.php
index 9dccbc9..589efde 100755
--- a/language/english/manymailerplus_lang.php
+++ b/language/english/manymailerplus_lang.php
@@ -45,6 +45,7 @@ $lang = array(
 	'mandrill_api_key' => 'API Key',
 	'mandrill_test_api_key' => 'Test API Key <i>(optional)</i>',
 	'mandrill_subaccount' => 'Subaccount <i>(optional)</i>',
+	'mandrill_testmode__yes_no' => 'Test Mode',
 	'postmark_name' => 'Postmark',
 	'postmark_description' => 'Postmark offers your first 25,000 email sends free, followed by pay-as-you-go pricing. Sign-up at <a href="%s">http://postmarkapp.com</a>. <i>Note: the From address of each email must be approved in your Postmark dashboard in order to send successfully.</i>',
 	'postmark_link' => 'http://postmarkapp.com',
@@ -67,7 +68,7 @@ $lang = array(
 	'mailgun_api_key' => 'API Key',	
 	'mailgun_domain' => 'Domain Name',
 	'missing_service_credentials' =>  'You have %s activated as a service in '.EXT_NAME.', but you are missing some required credentials to send email with this service.'.BR.BR.' Please visit your '.EXT_NAME.' settings screen to fix this.',
-	'using_alt_credentials' => 'You have %s activated as a service in '.EXT_NAME.' and are using test credentials: <i><b>%s</i></b>.'.BR.BR.'Current <u>"%s"</u> Settings as follows: '.BR.BR.'%s',
+	'using_alt_credentials' => 'You have %s activated as a service in '.EXT_NAME.' and are using test credentials: %s.'.BR.BR.'Current <u>"%s"</u> Settings as follows: '.BR.BR.'%s',
 	'could_not_deliver' => EXT_SHORT_NAME.' tried to deliver your email with %s but the service failed.',
 	'email_heading' => 'Email Functions',
 	'email_title' => 'Email Functions',
diff --git a/libraries/Services_module.php b/libraries/Services_module.php
index 5298705..3b7db33 100755
--- a/libraries/Services_module.php
+++ b/libraries/Services_module.php
@@ -147,7 +147,7 @@ class Services_module {
 
 		$this->model->settings = $settings;
 		$this->model->save();
-		console_message($current_service, __METHOD__);
+		console_message("$current_service : ". json_encode($settings), __METHOD__);
 		ee('CP/Alert')->makeInline('shared-form')
 	      ->asSuccess()
 		  ->withTitle(lang('settings_saved'))
@@ -199,67 +199,112 @@ class Services_module {
 			)
 		);
 			
+		// $control_type = "text";
+		// $choice_options = FALSE;
+		// $enabled_disabled = array(
+		// 	'y' => lang('enabled'),
+		// 	'n' => lang('disabled')
+		// );
 		if (array_key_exists($this->current_service, $vars['services'])){
 			foreach($vars['services'][$this->current_service] as $field_name)
 			{
-				// console_message($field_name, __METHOD__);
-				// if (is_array($field_name)){
-				// 	foreach ($field_name as $key => $value) {
-				// 		# code...
-				// 		switch ($value) {
-				// 			case 'checkbox':
-				// 			case 'inline_radio':
-				// 				$field = array(
-				// 					$key => array(
-				// 						'type' => 'inline_radio',
-				// 						'choices' => array(
-				// 							'y' => lang('enabled'),
-				// 							'n' => lang('disabled')
-				// 						),
-				// 						'value' => (!empty($field_name['value']) && $field_name['value'] == 'y') ? 'y' : 'n'
-				// 					)
-				// 				);
-				// 			default:
-				// 				# code...
-				// 				$field = array(
-				// 					$field_name = array(
-				// 						'type' => $value,
-				// 						'value' => (!empty($field_name['value'])) ? $field_name['value'] : '',
-				// 					)
-				// 				);
-				// 				break;
-				// 		}
+				
+				$i = $this->getServiceFields($field_name);
+				console_message($i);
+				extract($i, EXTR_OVERWRITE);
+			
+				// $is_multi_choice = is_array($field_name);
+				// if ($is_multi_choice) {
+				// 	$choice_options = $field_name;					
+				// 	$field_name = array_keys($field_name)[0];					
+				// 	console_message($choice_options, __METHOD__);
+				// }
 
-				// 		$sections[] = array(
-				// 			'title' => lang(''.$key),
-				// 			'desc' =>  '',
-				// 			'fields' => array(
-				// 				$key => $field
-				// 			)
-				// 		);
+				// $is_control = strpos($field_name, '__');
+				
+				// if ($is_control !== FALSE){
+				// 	$control_type = substr($field_name, ($is_control + 2 ));
+				// 	console_message("$field_name ( $is_control ) :  $control_type", __METHOD__);
+				// } 
+				
+				$field = array('type' => $control_type);
+				switch ($control_type) {
+					case 'file':
+					case 'image':
+						$filepicker = ee('CP/FilePicker')->make();
+						$link = $filepicker->getLink($field_name);
+						$field = array_merge($field, array(							
+							'value' => $link->render(),
+						));
+						break;
+					case 'select':
+					case 'dropdown':
+					case 'radio':
+					case 'yes_no':
+					case 'checkbox':
+					case 'inline_radio':
+						
+						$choices = (is_array($choice_options)) ? $choice_options[key($choice_options)] : $enabled_disabled;
+						$field = array_merge($field, array(							
+							'choices' => $choices,
+							'value' => (!empty($settings[$field_name])) ? $settings[$field_name] : '',
+						));						
+						break;
+					case 'textarea':
+					case 'short-text':
+						$field = array_merge($field, array('value' => (!empty($settings[$field_name])) ? $settings[$field_name] : ''));	
+						break;
+					default:
+						$field = array(
+							'type' => 'text',
+							'value' => (!empty($settings[$field_name])) ? $settings[$field_name] : '',
+						);
+					}
 						
-				// 	}
-				// }else{
 					$sections[] = array(
 						'title' => lang(''.$field_name),
-						'desc' => ($field_name == 'mandrill_test_api_key' || $field_name == 'mandrill_subaccount') ? lang('optional') : '',
+						'desc' =>  (in_array($field_name, array('mandrill_test_api_key','mandrill_subaccount'))) ? lang('optional') : '',
 						'fields' => array(
-							$field_name => array(
-								'type' => 'text',
-								'value' => (!empty($settings[$field_name])) ? $settings[$field_name] : '',
-							)
+							$field_name => $field
 						)
 					);
-				// }
 			}
 		}
+		console_message($sections, __METHOD__);
 		$vars['sections'] = array($sections);
 		return $vars;
 	}
+
+	public function getServiceFields($field_name, $type = 'text'){
+		$info = array();
+		$is_multi_choice = is_array($field_name);
+		$choice_options = FALSE;
+		if ($is_multi_choice) {
+			$choice_options = $field_name;					
+			$field_name = array_keys($field_name)[0];					
+			console_message($choice_options, __METHOD__);
+		}
+
+		$is_control = strpos($field_name, '__');
+			
+		if ($is_control !== FALSE){
+			$type = substr($field_name, ($is_control + 2 ));
+			console_message("$field_name ( $is_control ) :  $type", __METHOD__);
+		} 
+
+		return array(
+			'field_name'  => $field_name,
+			'choice_options' => $choice_options,
+			'control_type' => $type,
+			'enabled_disabled' => $enabled_disabled = array(
+				'y' => lang('enabled'),
+				'n' => lang('disabled')
+			)
+		);
+	}
 	
 	public function get_settings($all_sites = false) {
 		$all_settings = $this->model->settings;
-		console_message($this->site_id, __METHOD__);
 		$settings = ($all_sites == true || empty($all_settings)) ? $all_settings : $all_settings[$this->site_id];
                 
         // Check for config settings - they will override database settings
diff --git a/libraries/composer.php b/libraries/composer.php
index 80c22f5..72a479b 100755
--- a/libraries/composer.php
+++ b/libraries/composer.php
@@ -737,7 +737,7 @@ class Composer {
 				console_message($record, __METHOD__);
 				// standard 'First Last <email address> format
 				if (isset($record['{{first_name}}']) && isset($record['{{last_name}}'] )){
-					$to = "{$record['{{first_name}}']} {$record['{{last_name}}']}  <{$record['{{email}}']}>"; 
+					$to = "{$record['{{first_name}}']} {$record['{{last_name}}']}  <{$record['{{email}}']}>"; //TODO: https://trello.com/c/1lffhlXm
 				}else{
 					$to = $record[$this->csv_email_column]; 
 				}
@@ -1004,15 +1004,16 @@ class Composer {
 						break;				
 					case 'mandrill':
 						$key = (!empty($settings['mandrill_api_key'])) ? $settings['mandrill_api_key'] : "";
-						if (!empty($settings['mandrill_test_api_key']) && $key == ""){
-							$key = $settings['mandrill_test_api_key'];
-						}
-						$log_message = sprintf(lang('using_alt_credentials'), $service, $key, $service, $str_settings);
-						console_message($log_message,__METHOD__);
-						if($key !== ""){
+						$test_key = (!empty($settings['mandrill_test_api_key'])) ? $settings['mandrill_test_api_key'] : "";
+						$test_mode = ($settings['mandrill_testmode__yes_no'] == 'y');
+						$active_key = $test_mode ? $test_key : $key;
+						$log_message = sprintf(lang('using_alt_credentials'), $service, $active_key, $service, $str_settings);
+						if ($test_mode) console_message($log_message,__METHOD__);
+						if($active_key !== ""){
 							$subaccount = (!empty($settings['mandrill_subaccount']) ? $settings['mandrill_subaccount'] : '');
-							$sent = $this->_send_mandrill($key, $subaccount);
+							$sent = $this->_send_mandrill($active_key, $subaccount);
 							console_message($log_message, __METHOD__);
+							
 							// ee()->session->set_flashdata(array('message_error' => $log_message));
 							$missing_credentials = false;
 						}
-- 
2.7.4.windows.1

